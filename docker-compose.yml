version: "3.8"

services:
  # Couchbase Database
  couchbase:
    image: couchbase:7.2.4
    container_name: restaurant-couchbase
    restart: unless-stopped
    environment:
      COUCHBASE_ADMINISTRATOR_USERNAME: admin
      COUCHBASE_ADMINISTRATOR_PASSWORD: password123
      COUCHBASE_BUCKET: restaurant-reservations
      COUCHBASE_BUCKET_RAMSIZE: 512
    ports:
      - "8091-8096:8091-8096"
      - "11210:11210"
    volumes:
      - couchbase_data:/opt/couchbase/var
      - ./docker/couchbase/init-cluster.sh:/opt/couchbase/init/init-cluster.sh
    networks:
      - restaurant-network
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "-u",
          "admin:password123",
          "http://localhost:8091/pools/default",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Couchbase Initialization
  couchbase-init:
    image: couchbase:7.2.4
    container_name: restaurant-couchbase-init
    depends_on:
      couchbase:
        condition: service_healthy
    volumes:
      - ./docker/couchbase/init-cluster.sh:/init-cluster.sh
    networks:
      - restaurant-network
    command: ["/bin/bash", "/init-cluster.sh"]
    restart: "no"

  # Backend API Service
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: restaurant-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4000
      COUCHBASE_CONNECTION_STRING: couchbase://couchbase
      COUCHBASE_USERNAME: admin
      COUCHBASE_PASSWORD: password123
      COUCHBASE_BUCKET: restaurant-reservations
      JWT_SECRET: your-super-secret-jwt-key-for-development-only
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "4000:4000"
    depends_on:
      - couchbase
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    networks:
      - restaurant-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Application
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    container_name: restaurant-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_GRAPHQL_URL: http://localhost:4000/graphql
      VITE_NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    networks:
      - restaurant-network

  # Redis (for future caching and sessions)
  redis:
    image: redis:7.2-alpine
    container_name: restaurant-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - restaurant-network
    command: redis-server --appendonly yes

  # Couchbase Web Console is available at http://localhost:8091
  # Login with admin/password123

volumes:
  couchbase_data:
    driver: local
  redis_data:
    driver: local

networks:
  restaurant-network:
    driver: bridge
